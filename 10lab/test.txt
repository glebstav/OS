Командные интерпретаторы или командные оболочки Unix, такие, как sh(1), 
ksh(1), bash(1) и
некоторые другие, часто объединяют под общим названием shell, так как их 
командные
языки очень похожи. Командные языки shell описаны на соответствующих 
страницах
руководства, а также во многих учебных пособиях для пользователей Unix. 
В действительности, командный язык shell представляет собой 
полнофункциональный (turingcomplete) процедурный интерпретируемый язык 
программирования с переменными,
разрушающим присваиванием, условными операторами, циклами и т. д. Полное 
изучение
языка shell выходит за пределы нашего курса, но знакомство с этим языком 
полезно для
выполнения многих упражнений и правильного понимания поведения 
системы.Shell, как и другие программы на языке C, использует exec(2) для 
исполнения программ.
Shell читает командную строку с терминала или из командного файла, 
разделяет её на
аргументы, затем создаёт дочерний процесс и в этом процессе вызывает 
exec(2) с
соответствующими параметрами (основной процесс shell при этом ждёт 
завершения
дочернего процесса). Первое слово командной строки — это имя программы, 
которую нужно исполнить, последующие аргументы — это значения argv[1] и 
последующих элементов
вектора argv[]. Если имя программы содержит один или несколько символов 
/, оно
интерпретируется как абсолютное или относительное путевое имя. Если же 
имя программы
не содержит /, то исполняемый файл с таким именем ищется в списке 
каталогов, заданных в переменной среды PATH, как при использовании 
execvp(2). В действительности, некоторые
командные оболочки (например, bash(1)) не используют execvp(2), а сами 
выполняют поиск
файла по PATH и кэшируют результаты поиска во внутренних хэш-таблицах, 
что может
ускорить исполнение длинных последовательностей команд.
